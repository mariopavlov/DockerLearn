input { 
  redis {
    host => 'redis'
    data_type => 'list'
    key => 'apache_logs'
    type => 'apache_logs'
  }
  
  redis {
    host => 'redis'
    data_type => 'list'
    key => 'java_logs'
    type => 'java_logs'
    codec => multiline {
      pattern => "^%{TIMESTAMP_ISO8601} "
      negate => true
      what => "previous"
    }
  }
} 

filter {
  if [type] == "apache_logs" {
    grok {
      match => { "message" => "%{COMBINEDAPACHELOG}" }
    }

    date {
      match => [ "timestamp" , "dd/MMM/yyyy:HH:mm:ss Z" ]
    }
  }

  if [type] == "java_logs" {
    mutate {
      gsub => [ "message", "\r", "" ]
    }
    grok {
      #match => [ "message", "^%{DATA:timestamp}\s+%{LOGLEVEL:severity}\s+(?<pid>(|[0-9]+))\s+\[(?<processname>[A-Za-z0-9\s\#]+:[0-9]+)\]\s+(?<message>(.|\r|\n)+)$" ]
      match => [ "message", "^%{TIMESTAMP_ISO8601:timestamp}\s+%{LOGLEVEL:severity}\s+%{POSINT:pid}\s+(?<message>(.|\r|\n)+)$" ]
      overwrite => [ "message" ]
      add_tag => [ "java_test" ]
    }
  }
}

output { 
  stdout {
    codec => rubydebug
  }

  elasticsearch {
    hosts => ['elasticsearch:9200']
  } 
}
